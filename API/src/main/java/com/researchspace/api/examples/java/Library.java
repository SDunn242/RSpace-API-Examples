package com.researchspace.api.examples.java;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URISyntaxException;
import java.util.Properties;

import org.apache.http.client.fluent.Request;

/**
 * This Java source file was auto generated by running 'gradle buildInit --type java-library'
 * by 'Sarah' at '12/16/16 12:14 AM' with Gradle 3.0
 *
 * @author Sarah, @date 12/16/16 12:14 AM
 */
public class Library {
	
	public static final String API_DOCUMENTS_ENDPOINT = "/api/v1/documents"; 
	
	public static String getAPIDocumentsUrl() {
		return getConfigProperty("serverURL") + API_DOCUMENTS_ENDPOINT;
	}
	
	public static String getAPIDocumentUrl(long docID) {
		return getAPIDocumentsUrl() + "/" + docID;
	}
	
	// Method to read property from config.properties file
	public static String getConfigProperty(String property) {
		Properties prop = new Properties();
		InputStream input = null;
		String propertyValue = "";
	
		try {
			// load a properties file
			input = new FileInputStream("config.properties");
			prop.load(input);
			propertyValue = prop.getProperty(property);
		} catch (IOException ex) {
			ex.printStackTrace();
		} finally {
			if (input != null) {
				try {
					input.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
		return propertyValue;
	}

	//This method makes the HTTP query and returns the results as a JSON string
	public static String makeQuery(String uriString) throws URISyntaxException {
		
		String output = "";
		try {
			output = (Request.Get(uriString)
					.addHeader("apiKey", Library.getConfigProperty("apiKey"))
					.connectTimeout(10000)
					.socketTimeout(10000)
					.execute().returnContent().asString());
		} catch (IOException e) {
			e.printStackTrace();
		}
		return output;
	}
	
}
